@page "/login"
@using System.Net.Http.Json
@using BlazorShop.Models.DTOs
@using Blazored.LocalStorage
@inject HttpClient HttpClient
@inject NavigationManager Navigation
@inject CustomAuthenticationStateProvider AuthenticationStateProvider
@inject ILocalStorageService LocalStorage

<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="loginModel.UserName" />
    </div>

    <div>
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="loginModel.Password" type="password" />
    </div>

    <button type="submit">Login</button>

    @if (!string.IsNullOrEmpty(loginErrorMessage))
    {
        <div class="alert alert-danger mt-2">
            @loginErrorMessage
        </div>
    }

    <div class="mt-3">
        <p>Don't have an account? <a href="register">Register here</a></p>
    </div>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();
    private string loginErrorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var response = await HttpClient.PostAsJsonAsync("api/identity/login", loginModel);

            if (response.IsSuccessStatusCode)
            {
                var tokenResponse = await response.Content.ReadFromJsonAsync<TokenResponse>();

                if (tokenResponse != null && !string.IsNullOrEmpty(tokenResponse.Token))
                {
                    await AuthenticationStateProvider.MarkUserAsAuthenticated(tokenResponse.Token);
                    await LocalStorage.SetItemAsync("authToken", tokenResponse.Token);
                    Navigation.NavigateTo("/");
                }
            }
            else
            {
                var errorResponse = await response.Content.ReadFromJsonAsync<ErrorResponse>();
                loginErrorMessage = errorResponse?.Message ?? "Login failed. Please check your username and password.";
            }
        }
        catch (Exception ex)
        {
            loginErrorMessage = "An error occurred during login. Please try again.";
        }
    }

    public class ErrorResponse
    {
        public string Message { get; set; }
    }

    public class TokenResponse
    {
        public string Token { get; set; }
    }
}
