@page "/register"
@using System.Net.Http.Json
@using System.ComponentModel.DataAnnotations
@inject HttpClient HttpClient
@inject NavigationManager Navigation

<h3>Cadastro de Usuário</h3>

<EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3 row">
        <label for="registerUsername" class="col-sm-2 col-form-label">Usuário</label>
        <div class="col-sm-10">
            <InputText id="registerUsername" @bind-Value="registerModel.UserName" />
        </div>
    </div>

    <div class="mb-3 row">
        <label for="registerEmail" class="col-sm-2 col-form-label">Email</label>
        <div class="col-sm-10">
         <InputText id="registerEmail" @bind-Value="registerModel.Email" />
        </div>
    </div>

    <div class="mb-3 row">
        <label for="registerPassword" class="col-sm-2 col-form-label">Senha</label>
        <div class="col-sm-10">
          <InputText id="registerPassword" @bind-Value="registerModel.Password" type="password" />
        </div>
    </div>

    <div class="mb-3 row">
        <label for="confirmPassword" class="col-sm-2 col-form-label">Confirme a Senha</label>
        <div class="col-sm-10">
           <InputText id="confirmPassword" @bind-Value="registerModel.ConfirmPassword" type="password" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Cadastrar</button>

    @if (!string.IsNullOrEmpty(registerErrorMessage))
    {
        <div class="alert alert-danger mt-2">
            @registerErrorMessage
        </div>
    }

    <div class="mt-3">
        <p>Já possui uma conta? <a href="login">Faça o login</a></p>
    </div>
</EditForm>

@code {
    private RegisterModel registerModel = new RegisterModel();
    private string registerErrorMessage;

    private async Task HandleRegister()
    {
        try
        {
            // Verifica se as senhas coincidem
            if (registerModel.Password != registerModel.ConfirmPassword)
            {
                registerErrorMessage = "Passwords do not match.";
                return;
            }

            var response = await HttpClient.PostAsJsonAsync("api/identity/register", registerModel);

            if (response.IsSuccessStatusCode)
            {
                registerErrorMessage = "Registration successful. You can now log in.";
                // Redireciona para a página de login após o registro bem-sucedido
                Navigation.NavigateTo("login");
            }
            else
            {
                var errorResponse = await response.Content.ReadFromJsonAsync<ErrorResponse>();
                registerErrorMessage = errorResponse?.Message ?? "Registration failed. Please check your information.";
            }
        }
        catch (Exception ex)
        {
            registerErrorMessage = "An error occurred during registration. Please try again.";
        }
    }

    public class RegisterModel
    {
        [Required]
        public string UserName { get; set; }

        [Required]
        public string Password { get; set; }

        [Required]
        [Compare("Password", ErrorMessage = "Passwords do not match.")]
        public string ConfirmPassword { get; set; }

        public string Email { get; set; }
    }

    public class ErrorResponse
    {
        public string Message { get; set; }
    }
}