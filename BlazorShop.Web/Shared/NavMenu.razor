@inject ICarrinhoCompraService CarrinhoCompraService
@inject NavigationManager Navigation

<!-- Nome da loja com fundo azul escuro -->
<div class="top-row ps-3 navbar navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand text-white" href="">Loja Virtual</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <!-- Mudando a estrutura para garantir que a saudação esteja acima do Home -->
        <div class="nav-item px-3 mt-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <ProdutosCategoriaNavMenu />

        <div class="nav-item px-3 d-sm-none">
            <NavLink class="nav-link" href="carrinho-compra">
                <span class="oi oi-cart" aria-hidden="true"></span>&nbsp;Carrinho(<b>@carrinhoCompraItemContador</b>)
            </NavLink>
        </div>

        <!-- Novo item de menu para Gerenciamento de Produto -->
        <div class="nav-item px-3 d-none d-sm-block">
            <NavLink class="nav-link" href="produto/gerenciamento">
                <span class="oi oi-cog" aria-hidden="true"></span>&nbsp;Gerenciar Produto
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private int carrinhoCompraItemContador = 0;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        CarrinhoCompraService.OnCarrinhoCompraChanged += CarrinhoCompraChanged;

        // Atualiza o contador de itens do carrinho no carregamento inicial, se necessário.
        // Se a função de carregamento inicial não estiver disponível, remova esta linha.
        // O contador de itens é atualizado somente via eventos.
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void CarrinhoCompraChanged(int totalQuantidade)
    {
        carrinhoCompraItemContador = totalQuantidade;
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        CarrinhoCompraService.OnCarrinhoCompraChanged -= CarrinhoCompraChanged;
    }
}
